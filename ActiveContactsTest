@isTest
public class ActiveContactsTest {
	@isTest
    static void testInsert(){
        Account acc = new Account(Name='TestAcc');
        insert acc;
        List<Contact> conts = new List<Contact>();
        conts.add(new Contact(LastName='TestCont1', Is_Active__c=true, AccountId=acc.Id));
        conts.add(new Contact(LastName='TestCont2', Is_Active__c=true, AccountId=acc.Id));
        conts.add(new Contact(LastName='TestCont3', Is_Active__c=false, AccountId=acc.Id));
        insert conts;
        
        Account acc2 = [SELECT Active_Contacts__c FROM Account WHERE Id=:acc.Id LIMIT 1];
        System.assertEquals(2, acc2.Active_Contacts__c);
    }
    
    @isTest
    static void testUpdate(){        
        Account acc1 = new Account(Name='TestAcc1');
        Account acc2 = new Account(Name='TestAcc2');
        insert acc1;
        insert acc2;
        List<Contact> conts = new List<Contact>();
        conts.add(new Contact(LastName='TestCont1', Is_Active__c=true, AccountId=Null)); //Null to Id1
        conts.add(new Contact(LastName='TestCont2', Is_Active__c=true, AccountId=acc1.Id)); //Id1 to Null         
        conts.add(new Contact(LastName='TestCont3', Is_Active__c=true, AccountId=acc1.Id)); //Id1 to Id2 - A to !A
        conts.add(new Contact(LastName='TestCont4', Is_Active__c=false, AccountId=acc1.Id)); //          - !A to A
        conts.add(new Contact(LastName='TestCont5', Is_Active__c=true, AccountId=acc1.Id)); //           - A to A
        conts.add(new Contact(LastName='TestCont6', Is_Active__c=true, AccountId=acc1.Id)); //Active to !Active
        conts.add(new Contact(LastName='TestCont7', Is_Active__c=false, AccountId=acc1.Id)); //!Active to Active
        insert conts; //acc1 contains 4 active contacts, acc2 - 0
        
        //Null to Id1
        Contact contUpd = [SELECT Id, Is_Active__c, AccountId FROM Contact WHERE LastName='TestCont1' LIMIT 1];
        contUpd.AccountId = acc1.Id;
        update contUpd;
        Account acc = [SELECT Active_Contacts__c FROM Account WHERE Id=:acc1.Id LIMIT 1];
        System.assertEquals(5, acc.Active_Contacts__c);
        
        //Id1 to Null
        contUpd = [SELECT Id, Is_Active__c, AccountId FROM Contact WHERE LastName='TestCont2' LIMIT 1];
        contUpd.AccountId = Null;
        update contUpd;
        acc = [SELECT Active_Contacts__c FROM Account WHERE Id=:acc1.Id LIMIT 1];
        System.assertEquals(4, acc.Active_Contacts__c);
        
        //Id1 to Id2
        //Active to !Active
        contUpd = [SELECT Id, Is_Active__c, AccountId FROM Contact WHERE LastName='TestCont3' LIMIT 1];
        contUpd.AccountId = acc2.Id;
        contUpd.Is_Active__c = false;
        update contUpd;
        acc = [SELECT Active_Contacts__c FROM Account WHERE Id=:acc1.Id LIMIT 1];
        System.assertEquals(3, acc.Active_Contacts__c);
        acc = [SELECT Active_Contacts__c FROM Account WHERE Id=:acc2.Id LIMIT 1];
        System.assertEquals(0, acc.Active_Contacts__c);
        //Id1 to Id2
        //!Active to Active
        contUpd = [SELECT Id, Is_Active__c, AccountId FROM Contact WHERE LastName='TestCont4' LIMIT 1];
        contUpd.AccountId = acc2.Id;
        contUpd.Is_Active__c = true;
        update contUpd;
        acc = [SELECT Active_Contacts__c FROM Account WHERE Id=:acc1.Id LIMIT 1];
        System.assertEquals(3, acc.Active_Contacts__c);
        acc = [SELECT Active_Contacts__c FROM Account WHERE Id=:acc2.Id LIMIT 1];
        System.assertEquals(1, acc.Active_Contacts__c);
		//Id1 to Id2
		//Active to Active
        contUpd = [SELECT Id, Is_Active__c, AccountId FROM Contact WHERE LastName='TestCont5' LIMIT 1];
        contUpd.AccountId = acc2.Id;
        update contUpd;
        acc = [SELECT Active_Contacts__c FROM Account WHERE Id=:acc1.Id LIMIT 1];
        System.assertEquals(2, acc.Active_Contacts__c);
        acc = [SELECT Active_Contacts__c FROM Account WHERE Id=:acc2.Id LIMIT 1];
        System.assertEquals(2, acc.Active_Contacts__c);
        
        //Same Id
        //Active to !Active
        contUpd = [SELECT Id, Is_Active__c, AccountId FROM Contact WHERE LastName='TestCont6' LIMIT 1];
        contUpd.Is_Active__c = false;
        update contUpd;
        acc = [SELECT Active_Contacts__c FROM Account WHERE Id=:acc1.Id LIMIT 1];
        System.assertEquals(1, acc.Active_Contacts__c);
        //Same Id
        //!Active to Active
        contUpd = [SELECT Id, Is_Active__c, AccountId FROM Contact WHERE LastName='TestCont7' LIMIT 1];
        contUpd.Is_Active__c = true;
        update contUpd;
        acc = [SELECT Active_Contacts__c FROM Account WHERE Id=:acc1.Id LIMIT 1];
        System.assertEquals(2, acc.Active_Contacts__c);
    }
    
    @isTest
    static void testDelete(){        
        Account acc = new Account(Name='TestAcc');
        insert acc;
        List<Contact> cont = new List<Contact>();
        cont.add(new Contact(LastName='TestCont1', Is_Active__c=true, AccountId=acc.Id));
        cont.add(new Contact(LastName='TestCont2', Is_Active__c=true, AccountId=acc.Id));        
        cont.add(new Contact(LastName='TestCont3', Is_Active__c=false, AccountId=acc.Id));
        insert cont;
                
        List<Contact> contDel = [SELECT Id FROM Contact WHERE AccountId=:acc.Id];
        delete contDel;
        
        Account acc2 = [SELECT Active_Contacts__c FROM Account WHERE Id=:acc.Id LIMIT 1];
        System.assertEquals(0, acc2.Active_Contacts__c); 
    }
    
    @isTest
    static void testUnDelete(){        
        Account acc = new Account(Name='TestAcc');
        insert acc;
        List<Contact> cont = new List<Contact>();
        cont.add(new Contact(LastName='TestCont1', Is_Active__c=true, AccountId=acc.Id));
        cont.add(new Contact(LastName='TestCont2', Is_Active__c=true, AccountId=acc.Id));        
        cont.add(new Contact(LastName='TestCont3', Is_Active__c=false, AccountId=acc.Id));
        insert cont;        
        List<Contact> contDel = [SELECT Id FROM Contact WHERE AccountId=:acc.Id];
        delete contDel;
        
        List<Contact> contUnDel = [SELECT Id FROM Contact WHERE AccountId=:acc.Id ALL ROWS];
        undelete contUnDel;
        
		Account acc2 = [SELECT Active_Contacts__c FROM Account WHERE Id=:acc.Id LIMIT 1];
        System.assertEquals(2, acc2.Active_Contacts__c); 
    }
}
